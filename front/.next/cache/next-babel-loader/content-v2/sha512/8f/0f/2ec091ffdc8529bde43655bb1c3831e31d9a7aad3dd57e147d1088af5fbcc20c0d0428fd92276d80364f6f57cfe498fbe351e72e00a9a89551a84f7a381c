{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useContext } from 'react';\nimport { openModal } from '@redq/reuse-modal';\nimport Router from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nimport { Scrollbar } from 'components/scrollbar/scrollbar';\nimport Drawer from 'components/drawer/drawer';\nimport NavLink from 'components/nav-link/nav-link';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport { DrawerBody, HamburgerIcon, DrawerContentWrapper, DrawerClose, DrawerMenu, DrawerMenuItem, UserOptionMenu } from './header.style';\nimport { MOBILE_DRAWER_MENU, PROFILE_PAGE } from 'site-settings/site-navigation';\nimport { useAppState, useAppDispatch } from 'contexts/app/app.provider';\n\nconst MobileDrawer = ({\n  config\n}) => {\n  var _config$restaurant, _config$restaurant$us, _config$restaurant2, _config$restaurant2$u, _config$restaurant3, _config$restaurant3$u, _config$restaurant4, _config$restaurant4$u, _config$restaurant5, _config$restaurant5$u, _config$restaurant6, _config$restaurant6$u;\n\n  const isDrawerOpen = useAppState('isDrawerOpen');\n  const dispatch = useAppDispatch();\n  const {\n    authState: {\n      isAuthenticated\n    },\n    authDispatch\n  } = useContext(AuthContext); // Toggle drawer\n\n  const toggleHandler = React.useCallback(() => {\n    dispatch({\n      type: 'TOGGLE_DRAWER'\n    });\n  }, [dispatch]);\n\n  const handleLogout = () => {\n    if (false) {\n      localStorage.removeItem('access_token');\n      authDispatch({\n        type: 'SIGN_OUT'\n      });\n      Router.push('/');\n    }\n  };\n\n  const signInOutForm = () => {\n    dispatch({\n      type: 'TOGGLE_DRAWER'\n    });\n    authDispatch({\n      type: 'SIGNIN'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsx(Drawer, {\n    width: \"316px\",\n    drawerHandler: /*#__PURE__*/_jsxs(HamburgerIcon, {\n      children: [/*#__PURE__*/_jsx(\"span\", {}), /*#__PURE__*/_jsx(\"span\", {}), /*#__PURE__*/_jsx(\"span\", {})]\n    }),\n    open: isDrawerOpen,\n    toggleHandler: toggleHandler,\n    closeButton: /*#__PURE__*/_jsx(DrawerClose, {\n      children: /*#__PURE__*/_jsx(CloseIcon, {})\n    }),\n    children: /*#__PURE__*/_jsx(DrawerBody, {\n      children: /*#__PURE__*/_jsx(Scrollbar, {\n        className: \"drawer-scrollbar\",\n        children: /*#__PURE__*/_jsxs(DrawerContentWrapper, {\n          children: [/*#__PURE__*/_jsx(DrawerMenu, {\n            children: MOBILE_DRAWER_MENU.map(item => /*#__PURE__*/_jsx(DrawerMenuItem, {\n              children: /*#__PURE__*/_jsx(NavLink, {\n                onClick: toggleHandler,\n                href: item.href,\n                label: item.defaultMessage,\n                intlId: item.id,\n                className: \"drawer_menu_item\"\n              })\n            }, item.id))\n          }), isAuthenticated && /*#__PURE__*/_jsxs(UserOptionMenu, {\n            children: [/*#__PURE__*/_jsx(DrawerMenuItem, {\n              children: /*#__PURE__*/_jsx(NavLink, {\n                href: PROFILE_PAGE,\n                label: \"Your Account Settings\",\n                className: \"drawer_menu_item\",\n                intlId: \"navlinkAccountSettings\"\n              })\n            }), /*#__PURE__*/_jsx(DrawerMenuItem, {\n              children: /*#__PURE__*/_jsx(\"div\", {\n                onClick: handleLogout,\n                className: \"drawer_menu_item\",\n                children: /*#__PURE__*/_jsx(\"span\", {\n                  className: \"logoutBtn\",\n                  children: /*#__PURE__*/_jsx(FormattedMessage, {\n                    id: \"navlinkLogout\",\n                    defaultMessage: \"Logout\"\n                  })\n                })\n              })\n            })]\n          }), config !== null && config !== void 0 && (_config$restaurant = config.restaurant) !== null && _config$restaurant !== void 0 && (_config$restaurant$us = _config$restaurant.userConfig) !== null && _config$restaurant$us !== void 0 && _config$restaurant$us.support_email ? /*#__PURE__*/_jsx(DrawerMenuItem, {\n            children: /*#__PURE__*/_jsx(NavLink, {\n              href: `mailto:${config === null || config === void 0 ? void 0 : (_config$restaurant2 = config.restaurant) === null || _config$restaurant2 === void 0 ? void 0 : (_config$restaurant2$u = _config$restaurant2.userConfig) === null || _config$restaurant2$u === void 0 ? void 0 : _config$restaurant2$u.support_email}`,\n              label: config === null || config === void 0 ? void 0 : (_config$restaurant3 = config.restaurant) === null || _config$restaurant3 === void 0 ? void 0 : (_config$restaurant3$u = _config$restaurant3.userConfig) === null || _config$restaurant3$u === void 0 ? void 0 : _config$restaurant3$u.support_email,\n              className: \"drawer_menu_item\",\n              intlId: \"navlinkAccountSettings\"\n            })\n          }) : null, config !== null && config !== void 0 && (_config$restaurant4 = config.restaurant) !== null && _config$restaurant4 !== void 0 && (_config$restaurant4$u = _config$restaurant4.userConfig) !== null && _config$restaurant4$u !== void 0 && _config$restaurant4$u.phone ? /*#__PURE__*/_jsx(DrawerMenuItem, {\n            children: /*#__PURE__*/_jsx(NavLink, {\n              href: `tel:${config === null || config === void 0 ? void 0 : (_config$restaurant5 = config.restaurant) === null || _config$restaurant5 === void 0 ? void 0 : (_config$restaurant5$u = _config$restaurant5.userConfig) === null || _config$restaurant5$u === void 0 ? void 0 : _config$restaurant5$u.phone}`,\n              label: config === null || config === void 0 ? void 0 : (_config$restaurant6 = config.restaurant) === null || _config$restaurant6 === void 0 ? void 0 : (_config$restaurant6$u = _config$restaurant6.userConfig) === null || _config$restaurant6$u === void 0 ? void 0 : _config$restaurant6$u.phone,\n              className: \"drawer_menu_item\",\n              intlId: \"navlinkAccountSettings\"\n            })\n          }) : null]\n        })\n      })\n    })\n  });\n};\n\nexport default MobileDrawer;","map":null,"metadata":{},"sourceType":"module"}