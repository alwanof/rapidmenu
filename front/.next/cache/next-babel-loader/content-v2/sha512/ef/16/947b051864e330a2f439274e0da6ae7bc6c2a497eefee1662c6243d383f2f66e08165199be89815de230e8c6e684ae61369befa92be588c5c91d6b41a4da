{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { ErrorMessage, Formik, Form } from 'formik'; // import { useMutation } from '@apollo/client';\n\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\n// import { UPDATE_CONTACT } from 'graphql/mutation/contact';\nimport { FieldWrapper, Heading } from './contact-card.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport TextField from 'components/forms/text-field';\nconst ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('Number is required'),\n  name: Yup.string().required('Name is required')\n});\n\nconst CreateOrUpdateContact = ({\n  item,\n  config\n}) => {\n  const intl = useIntl();\n  const initialValues = {// id: item.id || null,\n    // type: item.type || 'primary',\n    // number: item.number || '',\n    // email: item.email || '',\n    // name: item.name || '',\n    // note: item.note || '',\n  }; // const [addContactMutation] = useMutation(UPDATE_CONTACT);\n\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    // await addContactMutation({\n    //   variables: { contactInput: JSON.stringify(values) },\n    // });\n    console.log(values, 'formik values');\n    dispatch({\n      type: 'ADD_OR_UPDATE_CONTACT',\n      payload: values\n    });\n    closeModal();\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/_jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: ContactValidationSchema,\n    children: ({\n      values,\n      handleChange,\n      handleBlur,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxs(Form, {\n      children: [/*#__PURE__*/_jsx(Heading, {\n        children: item && item.id ? /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"contactNumberText\",\n          defaultMessage: \"Edit Contact\"\n        }) : /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"contactNumberText\",\n          defaultMessage: \"Add New Contact\"\n        })\n      }), /*#__PURE__*/_jsx(FieldWrapper, {\n        children: /*#__PURE__*/_jsx(MaskedInput, {\n          mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n          className: \"form-control\",\n          placeholder: intl.formatMessage({\n            id: 'form.phone'\n          }),\n          guide: false,\n          id: \"my-input-id\",\n          value: values.number,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          name: \"number\",\n          render: (ref, props) => /*#__PURE__*/_jsx(PhoneStyledInput, _objectSpread({\n            ref: ref\n          }, props))\n        })\n      }), /*#__PURE__*/_jsx(ErrorMessage, {\n        name: \"number\",\n        component: StyledError\n      }), /*#__PURE__*/_jsx(FieldWrapper, {\n        children: /*#__PURE__*/_jsx(TextField, {\n          id: \"name\",\n          type: \"text\",\n          placeholder: intl.formatMessage({\n            id: 'form.name'\n          }),\n          value: values.name,\n          onChange: handleChange,\n          onBlur: handleBlur\n        })\n      }), /*#__PURE__*/_jsx(ErrorMessage, {\n        name: \"name\",\n        component: StyledError\n      }), /*#__PURE__*/_jsx(FieldWrapper, {\n        children: /*#__PURE__*/_jsx(TextField, {\n          id: \"email\",\n          type: \"text\",\n          placeholder: intl.formatMessage({\n            id: 'form.email'\n          }),\n          value: values.email,\n          onChange: handleChange,\n          onBlur: handleBlur\n        })\n      }), /*#__PURE__*/_jsx(FieldWrapper, {\n        children: /*#__PURE__*/_jsx(TextField, {\n          id: \"note\",\n          as: \"textarea\",\n          placeholder: intl.formatMessage({\n            id: 'form.note'\n          }),\n          value: values.note,\n          onChange: handleChange,\n          onBlur: handleBlur\n        })\n      })]\n    })\n  });\n};\n\nexport default CreateOrUpdateContact;\nconst StyledInput = styled.input.withConfig({\n  displayName: \"contact-card__StyledInput\",\n  componentId: \"sc-1pk9751-0\"\n})([\"width:100%;height:54px;border-radius:\", \";font-family:\", \";border:1px solid \", \";color:\", \";font-size:16px;line-height:19px;font-weight:\", \";padding:0 18px;box-sizing:border-box;transition:border-color 0.25s ease;&:hover,&:focus{outline:0;}&:focus{border-color:\", \";}&::placeholder{color:\", \";}\"], themeGet('radii.base', '6px'), themeGet('fonts.body', 'Lato, sans-serif'), themeGet('colors.gray.700', '#e6e6e6'), themeGet('colors.text.bold', '#0D1136'), themeGet('fontWeights.regular', '400'), themeGet('colors.primary.regular', '#009e7f'), themeGet('colors.text.regular', '#77798C'));\nconst PhoneStyledInput = styled.input.withConfig({\n  displayName: \"contact-card__PhoneStyledInput\",\n  componentId: \"sc-1pk9751-1\"\n})([\"width:100%;height:54px;border-radius:\", \";font-family:\", \";border:1px solid \", \";color:\", \";background-color:\", \";border-color:\", \";font-size:16px;line-height:19px;font-weight:\", \";padding:0 18px;box-sizing:border-box;transition:border-color 0.25s ease;direction:ltr !important;&:hover,&:focus{outline:0;}&:focus{border-color:\", \";}&::placeholder{color:\", \";}\"], themeGet('radii.base', '6px'), themeGet('fonts.body', 'Lato, sans-serif'), themeGet('colors.gray.700', '#e6e6e6'), themeGet('colors.text.bold', '#0D1136'), themeGet('colors.inputCheckout', '#0D1136'), themeGet('colors.inputBorderCheckout', '#0D1136'), themeGet('fontWeights.regular', '400'), themeGet('colors.primary.regular', '#009e7f'), themeGet('colors.text.regular', '#77798C'));\nconst StyledError = styled.div.withConfig({\n  displayName: \"contact-card__StyledError\",\n  componentId: \"sc-1pk9751-2\"\n})([\"color:red;padding-bottom:10px;margin-top:-5px;\"]);","map":null,"metadata":{},"sourceType":"module"}