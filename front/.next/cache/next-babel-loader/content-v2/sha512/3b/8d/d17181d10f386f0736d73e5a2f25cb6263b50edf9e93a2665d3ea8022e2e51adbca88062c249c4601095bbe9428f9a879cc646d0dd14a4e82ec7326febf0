{"ast":null,"code":"import { locales, rtlLocales, defaultLocale } from './language.config';\nimport Cookie from 'js-cookie';\nexport function isLocale(tested) {\n  return locales.some(locale => locale === tested);\n}\nexport function isRTL(tested) {\n  return rtlLocales.some(locale => locale === tested);\n}\nexport function getInitialLocale(config) {\n  var _config$restaurant, _config$restaurant$us;\n\n  // preference from the previous session\n  const localSetting = Cookie.get('locale');\n\n  if (localSetting && isLocale(localSetting)) {\n    return localSetting;\n  }\n\n  if (config !== null && config !== void 0 && (_config$restaurant = config.restaurant) !== null && _config$restaurant !== void 0 && (_config$restaurant$us = _config$restaurant.userConfig) !== null && _config$restaurant$us !== void 0 && _config$restaurant$us.main_lang) {\n    return config === null || config === void 0 ? void 0 : config.restaurant.userConfig.main_lang;\n  } // the language setting of the browser\n  // const [browserSetting] = navigator.language.split('-');\n  // if (isLocale(browserSetting)) {\n  //   return browserSetting;\n  // }\n\n\n  return defaultLocale;\n}\nexport function getCorrectTranslation(config, object, field) {\n  var _config$restaurant2, _config$restaurant2$u;\n\n  let currentLang = getInitialLocale(config);\n\n  if (currentLang === (config === null || config === void 0 ? void 0 : (_config$restaurant2 = config.restaurant) === null || _config$restaurant2 === void 0 ? void 0 : (_config$restaurant2$u = _config$restaurant2.userConfig) === null || _config$restaurant2$u === void 0 ? void 0 : _config$restaurant2$u.alt_lang)) {\n    return object[`alt${field}`];\n  } else {\n    return object[`main${field}`];\n  }\n}\nexport function isAlternativeLanguage(config) {\n  var _config$restaurant3, _config$restaurant3$u;\n\n  let currentLang = getInitialLocale(config);\n  return currentLang === (config === null || config === void 0 ? void 0 : (_config$restaurant3 = config.restaurant) === null || _config$restaurant3 === void 0 ? void 0 : (_config$restaurant3$u = _config$restaurant3.userConfig) === null || _config$restaurant3$u === void 0 ? void 0 : _config$restaurant3$u.alt_lang);\n}","map":null,"metadata":{},"sourceType":"module"}