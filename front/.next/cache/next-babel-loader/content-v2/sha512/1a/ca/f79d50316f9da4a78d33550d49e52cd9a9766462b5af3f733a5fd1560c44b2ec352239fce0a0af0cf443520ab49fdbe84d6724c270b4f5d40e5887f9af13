{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { ProductCard } from 'components/product-card/product-card-six';\nimport styled from 'styled-components';\nimport css from '@styled-system/css';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { useRouter } from 'next/router';\nimport { Button } from 'components/button/loadmore-button';\nimport { FormattedMessage } from 'react-intl';\nimport { Box } from 'components/box';\nimport useProducts from 'data/use-products';\nconst Grid = styled.div.withConfig({\n  displayName: \"product-grid-two__Grid\",\n  componentId: \"sc-1vgkgmk-0\"\n})(css({\n  display: 'grid',\n  gridGap: '10px',\n  gridTemplateColumns: 'repeat(1, minmax(180px, 1fr))',\n  '@media screen and (min-width: 480px)': {\n    gridTemplateColumns: 'repeat(2, minmax(180px, 1fr))'\n  },\n  '@media screen and (min-width: 740px)': {\n    gridTemplateColumns: 'repeat(3, minmax(180px, 1fr))'\n  },\n  '@media screen and (min-width: 991px)': {\n    gridTemplateColumns: 'repeat(4, minmax(180px, 1fr))'\n  },\n  '@media screen and (min-width: 1200px)': {\n    gridTemplateColumns: 'repeat(5, minmax(180px, 1fr))'\n  },\n  '@media screen and (min-width: 1400px)': {\n    gridTemplateColumns: 'repeat(6, minmax(180px, 1fr))'\n  },\n  '@media screen and (min-width: 1700px)': {\n    gridTemplateColumns: 'repeat(7, minmax(180px, 1fr))'\n  }\n}));\nexport const ProductGrid = ({\n  style,\n  type,\n  fetchLimit = 16,\n  loadMore = true,\n  config\n}) => {\n  var _config$restaurant;\n\n  const router = useRouter();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    data,\n    error\n  } = useProducts({\n    type,\n    text: router.query.text,\n    category: router.query.category,\n    offset: 0,\n    limit: fetchLimit,\n    slug: config === null || config === void 0 ? void 0 : (_config$restaurant = config.restaurant) === null || _config$restaurant === void 0 ? void 0 : _config$restaurant.slug\n  });\n  if (error) return /*#__PURE__*/_jsx(ErrorMessage, {\n    message: error.message\n  });\n  if (!data) return null;\n\n  const handleLoadMore = async () => {\n    setLoading(true); // await fetchMore(Number(data.length), fetchLimit);\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxs(\"section\", {\n    children: [/*#__PURE__*/_jsx(Grid, {\n      style: style,\n      children: data.map((product, idx) => /*#__PURE__*/_jsx(ProductCard, {\n        data: product\n      }, product.id))\n    }), loadMore && (data === null || data === void 0 ? void 0 : data.hasMore) && /*#__PURE__*/_jsx(Box, {\n      style: {\n        textAlign: 'center'\n      },\n      mt: '2rem',\n      children: /*#__PURE__*/_jsx(Button, {\n        onClick: handleLoadMore,\n        loading: loading,\n        variant: \"secondary\",\n        style: {\n          fontSize: 14,\n          display: 'inline-flex'\n        },\n        border: \"1px solid #f1f1f1\",\n        children: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"loadMoreButton\",\n          defaultMessage: \"Load More\"\n        })\n      })\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}