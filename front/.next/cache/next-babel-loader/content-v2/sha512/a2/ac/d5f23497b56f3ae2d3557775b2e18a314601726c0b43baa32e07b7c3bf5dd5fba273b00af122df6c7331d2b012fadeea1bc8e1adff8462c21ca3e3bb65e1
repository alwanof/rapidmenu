{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/home/whatsappneed.com/public_html/front/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/whatsappneed.com/public_html/front/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { ProductCard } from 'components/product-card/product-card-seven';\nimport styled from 'styled-components';\nimport css from '@styled-system/css';\nimport ErrorMessage from 'components/error-message/error-message'; // import { useQuery, NetworkStatus } from '@apollo/client';\n// import { GET_PRODUCTS } from 'graphql/query/products.query';\n\nimport { useRouter } from 'next/router';\nimport { Button } from 'components/button/loadmore-button';\nimport { FormattedMessage } from 'react-intl';\nimport { Box } from 'components/box';\nimport { isAlternativeLanguage } from 'contexts/language/language.utils';\nimport useProducts from 'data/use-products'; // import { Button } from './button';\n\nvar Grid = styled.div.withConfig({\n  displayName: \"product-grid__Grid\",\n  componentId: \"uvfti9-0\"\n})(css({\n  display: 'grid',\n  gridGap: '10px',\n  gridTemplateColumns: 'repeat(1, minmax(180px, 1fr))',\n  '@media screen and (min-width: 440px)': {\n    gridTemplateColumns: 'repeat(2, minmax(180px, 1fr))'\n  },\n  '@media screen and (min-width: 768px)': {\n    gridTemplateColumns: 'repeat(3, minmax(180px, 1fr))',\n    gridGap: '20px'\n  },\n  '@media screen and (min-width: 991px)': {\n    gridTemplateColumns: 'repeat(2, minmax(180px, 1fr))',\n    gridGap: '30px'\n  },\n  '@media screen and (min-width: 1100px)': {\n    gridTemplateColumns: 'repeat(3, minmax(180px, 1fr))'\n  },\n  '@media screen and (min-width: 1700px)': {\n    gridTemplateColumns: 'repeat(4, minmax(240px, 1fr))'\n  },\n  '@media screen and (min-width: 2200px)': {\n    gridTemplateColumns: 'repeat(5, minmax(240px, 1fr))'\n  }\n}));\nexport var ProductGrid = function ProductGrid(_ref) {\n  var _config$restaurant;\n\n  var style = _ref.style,\n      type = _ref.type,\n      _ref$loadMore = _ref.loadMore,\n      loadMore = _ref$loadMore === void 0 ? true : _ref$loadMore,\n      _ref$fetchLimit = _ref.fetchLimit,\n      fetchLimit = _ref$fetchLimit === void 0 ? 16 : _ref$fetchLimit,\n      config = _ref.config;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useProducts = useProducts({\n    type: type,\n    text: router.query.text,\n    category: router.query.category,\n    offset: 0,\n    limit: fetchLimit,\n    slug: config === null || config === void 0 ? void 0 : (_config$restaurant = config.restaurant) === null || _config$restaurant === void 0 ? void 0 : _config$restaurant.slug,\n    altLang: isAlternativeLanguage(config)\n  }),\n      data = _useProducts.data,\n      error = _useProducts.error;\n\n  if (error) return /*#__PURE__*/_jsx(ErrorMessage, {\n    message: error.message\n  });\n  if (!data) return null;\n\n  var handleLoadMore = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true); // await fetchMore(Number(data.length), fetchLimit);\n\n              setLoading(false);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleLoadMore() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // const { items, hasMore } = data.products;\n\n\n  return /*#__PURE__*/_jsxs(\"section\", {\n    children: [/*#__PURE__*/_jsx(Grid, {\n      style: style,\n      children: data.map(function (product, idx) {\n        return /*#__PURE__*/_jsx(ProductCard, {\n          data: product\n        }, product.id);\n      })\n    }), loadMore && (data === null || data === void 0 ? void 0 : data.hasMore) && /*#__PURE__*/_jsx(Box, {\n      style: {\n        textAlign: 'center'\n      },\n      mt: '2rem',\n      children: /*#__PURE__*/_jsx(Button, {\n        onClick: handleLoadMore,\n        loading: loading,\n        variant: \"secondary\",\n        style: {\n          fontSize: 14,\n          display: 'inline-flex'\n        },\n        border: \"1px solid #f1f1f1\",\n        children: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"loadMoreButton\",\n          defaultMessage: \"Load More\"\n        })\n      })\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}